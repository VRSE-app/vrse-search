version: '3'

services:
  #################################
  #      Setup node container     #
  #################################
  server:
    container_name: vrse-api
    build: ./server
    ports:
      - "3000:3000" # Expose API port
      - "9229:9229" # Expose Node process debug port (disable in production)
    environment: # Set ENV vars
      - NODE_ENV=local
      - ES_HOST=elasticsearch
      - PORT=3000
    volumes:
      - ./server/src:/usr/src/app/server/src # may not need the additional server in the path (?)
      - ./books:/usr/src/app/books # you have to mount the volume where the data is imported from
      - ./publications:/usr/src/app/publications # you have to mount the volume where the data is imported from
    command: npm start

  #################################
  #     Setup client container    #
  #################################
  client:
    container_name: vrse-client
    build: ./client
    environment:
      - REACT_APP_PORT=8000
    # expose:
    #   - 8000
    ports:
      - 8000:8000
    volumes:
      - ./client/src:/usr/src/app/client/src
      - ./client/public:/usr/src/app/client/public
    links:
      - server
    command: npm start

  #################################
  # Setup elasticsearch container #
  #################################
  # An Elasticsearch container for storing and searching data
  elasticsearch: # Elasticsearch Instance
    container_name: vrse-search
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    volumes: # Persist ES data in separate "esdata" volume
      - esdata:/usr/share/elasticsearch/data
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports: # Expose Elasticsearch ports
      - "9300:9300"
      - "9200:9200"

volumes: # Define seperate volume for Elasticsearch data
  esdata: 
